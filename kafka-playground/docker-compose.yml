version: '2'
services:
  zookeeper:
    image: wurstmeister/zookeeper:latest
    ports:
      - '2181:2181'
  kafka:
    image: wurstmeister/kafka:2.11-1.1.1
    ports:
      - '9092:9092'
    links:
      - zookeeper
    environment:
      KAFKA_ADVERTISED_HOST_NAME: ${HOST_IP}
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
      KAFKA_DELETE_TOPIC_ENABLE: 'true'
      KAFKA_CREATE_TOPICS: 'topic-test:1:1'
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  kafka2:
    image: wurstmeister/kafka:2.11-1.1.1
    ports:
      - '9094:9092'
    links:
      - zookeeper
    environment:
      KAFKA_ADVERTISED_HOST_NAME: ${HOST_IP}
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
      KAFKA_DELETE_TOPIC_ENABLE: 'true'
      KAFKA_CREATE_TOPICS: 'topic-test:1:1'
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  kafka3:
    image: wurstmeister/kafka:2.11-1.1.1
    ports:
      - '9095:9092'
    links:
      - zookeeper
    environment:
      KAFKA_ADVERTISED_HOST_NAME: ${HOST_IP}
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
      KAFKA_DELETE_TOPIC_ENABLE: 'true'
      KAFKA_CREATE_TOPICS: 'topic-test:1:1'
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  kafka4:
    image: wurstmeister/kafka:2.11-1.1.1
    ports:
      - '9096:9092'
    links:
      - zookeeper
    environment:
      KAFKA_ADVERTISED_HOST_NAME: ${HOST_IP}
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
      KAFKA_DELETE_TOPIC_ENABLE: 'true'
      KAFKA_CREATE_TOPICS: 'topic-test:1:1'
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  kafka_exporter:
    image: danielqsj/kafka-exporter
    ports:
      - '9308:9308'
    depends_on:
      - kafka
      - kafka2
      - kafka3
      - kafka4
    restart: always

  prometheus:
    image: prom/prometheus
    ports:
      - 9090:9090
    volumes:
      - $PWD/Utils/scripts/prometheus.yml:/etc/prometheus/prometheus.yml
      # - ./data/prometheus/data:/prometheus
    depends_on:
      - kafka_exporter
      - alertmanager
      - cadvisor
      - node-exporter
    restart: always

  alertmanager:
    image: prom/alertmanager
    ports:
      - 9093:9093
    depends_on:
      - kafka_exporter

  node-exporter:
    image: prom/node-exporter:latest
    container_name: monitoring_node_exporter
    restart: always
    expose:
      - 9100

  grafana:
    image: grafana/grafana
    ports:
      - '3000:3000'
    volumes:
      - $PWD/plugin:/var/lib/grafana/plugins
      - $PWD/provisioning/:/etc/grafana/provisioning/
      # - ./data/grafana:/var/lib/grafana
    depends_on:
      - prometheus
    environment:
      GF_SECURITY_ALLOW_EMBEDDING: 'true'
      # GF_INSTALL_PLUGINS: natel-discrete-panel
      GF_PATHS_PLUGINS: /var/lib/grafana/plugins
      GF_AUTH_ANONYMOUS_ENABLED: 'true'

  cadvisor:
    image: google/cadvisor:latest
    container_name: monitoring_cadvisor
    restart: always
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    expose:
      - 8085
